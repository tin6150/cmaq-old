head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2006.03.21.13.54.28;	author sjr;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.21.13.52.28;	author sjr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@CMAQv4_5_1
@
text
@
# RCS file, release, date & time of last delta, author, state, [and locker]
# $Header: /project/work/rep/ICON/CVSROOT/modules,v 1.12 2006/03/21 13:21:45 sjr Exp $ 

# what(1) key, module and SID; SCCS file; date and time of last delta:
# %W% %P% %G% %U%

# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-e prog		Run "prog" on "cvs export" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# NOTE:  If you change any of the "Run" options above, you'll have to
# release and re-checkout any working directories of these modules.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.

      CVSROOT            CVSROOT
      modules            CVSROOT modules
      ICON               src
      driver             src/driver
      icon               src/driver/icon 
      input   	         src/input
      profile            src/input/profile
      radmconc           src/input/radmconc
      m3conc             src/input/m3conc
      tracer             src/input/tracer
      mech_conv          src/mech_conv
      mc_noop            src/mech_conv/noop
      user_def           src/mech_conv/user_defined
      radm2_to_cb4       src/mech_conv/radm2_to_cb4
      radm2_to_cb4hg     src/mech_conv/radm2_to_cb4hg
      radm2_to_cb05      src/mech_conv/radm2_to_cb05
      radm2_to_saprc99   src/mech_conv/radm2_to_saprc99
      icl                src/icl/icl
      par                src/par/par
      par_noop           src/par/par_noop
#2    bldrun             src/bldrun

#1 = not implemented
#2 = hidden
@


1.1
log
@initial checkin
@
text
@d1 7
d34 25
@


