head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_5_1:1.1.1.1 ASMD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2006.03.21.13.53.59;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.03.21.13.53.59;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************

C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/ICON/src/input/m3conc/m3_ck_icmet.F,v 1.4 2005/02/17 16:43:04 yoj Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C %W% %P% %G% %U%


      SUBROUTINE CK_ICMET_FL( LOGUNIT, SDATE, STIME )

C*************************************************************************
C
C  FUNCTION: To check input MET_CRO_3D_FIN file for consistency with
C            the COORD.EXT data
C             
C  PRECONDITIONS: None
C 
C  KEY SUBROUTINES/FUNCTIONS CALLED: None
C
C  REVISION HISTORY: Prototype created by Jerry Gipson, May, 1999
C                    01/24/02 Steve Howard (Jeff Young) - dynamic allocation
C                    12/13/04 J.Young: vert dyn alloc - Use VGRD_DEFN
C                   
C*************************************************************************

      USE HGRD_DEFN   ! Module to store and load the horizontal grid variables
      USE VGRD_DEFN             ! vertical layer specifications

      IMPLICIT NONE     

C..INCLUDE FILES:
      INCLUDE SUBST_IOPARMS     ! IOAPI parameters
      INCLUDE SUBST_IOFDESC     ! IOAPI file description
      INCLUDE SUBST_IODECL      ! IOAPI declarations
!     INCLUDE SUBST_HGRD_ID     ! Horizontal grid
!     INCLUDE SUBST_VGRD_ID     ! Vertical grid
!     INCLUDE SUBST_COORD_ID    ! Grid coordinate data

      INCLUDE 'IC_PARMS.EXT'    ! BCON paramters

C..ARGUMENTS:

      INTEGER LOGUNIT                 ! Unit number for output log
      INTEGER SDATE                   ! Start date
      INTEGER STIME                   ! Start time

C..PARAMETERS: None

C..EXTERNAL FUNCTIONS: None

C..SAVED LOCAL VARIABLES: None

C..SCRATCH LOCAL VARIABLES:
      CHARACTER*80  MSG               ! Log message
      CHARACTER*16  PNAME             ! Program Name
      CHARACTER*15  VAL1              ! Character value of real
      CHARACTER*15  VAL2              ! Character value of real

      INTEGER JDATE       ! Current date
      INTEGER JTIME       ! Current time
      INTEGER L           ! Loop index

      LOGICAL LERROR      ! Error Flag
    
C**********************************************************************
      DATA PNAME      / 'CK_ICMET_FL' /

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Write out report data
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      MSG = 'MET_CRO_3D_FIN File being checked for ' //
     &      'consistent header data' 
      CALL M3MESG( MSG )

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Get header data for MET_CRO_3D_FIN file
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( .NOT. OPEN3 ( MET_CRO_3D_FIN, FSREAD3, PNAME ) ) THEN
         MSG = 'Could not open ' // MET_CRO_3D_FIN // ' file'
         CALL M3ERR( PNAME, JDATE , JTIME, MSG, .TRUE. )
      ENDIF

      IF( .NOT. DESC3 ( MET_CRO_3D_FIN ) ) THEN
         MSG = 'Could not read DESC of  ' // MET_CRO_3D_FIN 
     &         // ' file'
         CALL M3ERR( PNAME, 0, 0, MSG, .TRUE. )
      ENDIF

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Check MET_CRO_3D_FIN file for consistency with COORD.EXT
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      WRITE( MSG, '( ''MET_CRO_3D_FIN & COORD.EXT inconsistencies: '' )'  )
      CALL M3MESG( MSG )

      LERROR = .FALSE.
         
      IF( FTYPE3D .NE. GRDDED3 ) THEN
         WRITE( LOGUNIT, 94020 ) FTYPE3D, BNDARY3
         LERROR = .TRUE.
      ENDIF

      IF( GDTYP3D .NE. GDTYP_GD ) THEN
         WRITE( LOGUNIT, 94200 ) GDTYP3D, GDTYP_GD
         LERROR = .TRUE.
      ENDIF

      IF( NCOLS3D .NE. NCOLS ) THEN
          WRITE( LOGUNIT, 94040 ) NCOLS3D, NCOLS
          LERROR = .TRUE.
      ENDIF

      IF( NROWS3D .NE. NROWS ) THEN
         WRITE( LOGUNIT, 94060 ) NROWS3D, NROWS
         LERROR = .TRUE.
      ENDIF

      IF( NLAYS3D .NE. NLAYS ) THEN
         WRITE( LOGUNIT, 94080 ) NLAYS3D, NLAYS
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) P_ALP3D
      WRITE( VAL2, 94000 ) P_ALP_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94220 ) P_ALP3D, P_ALP_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) P_BET3D
      WRITE( VAL2, 94000 ) P_BET_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94240 ) P_BET3D, P_BET_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) P_GAM3D
      WRITE( VAL2, 94000 ) P_GAM_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94260 ) P_GAM3D, P_GAM_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) XORIG3D
      WRITE( VAL2, 94000 ) XORIG_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94280 ) XORIG3D, XORIG_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) YORIG3D
      WRITE( VAL2, 94000 ) YORIG_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94300 ) YORIG3D, YORIG_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) XCELL3D
      WRITE( VAL2, 94000 ) XCELL_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94320 ) XCELL3D, XCELL_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) YCELL3D
      WRITE( VAL2, 94000 ) YCELL_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94340 ) YCELL3D, YCELL_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) XCENT3D
      WRITE( VAL2, 94000 ) XCENT_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94360 ) XCENT3D, XCENT_GD
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) YCENT3D
      WRITE( VAL2, 94000 ) YCENT_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94380 ) YCENT3D, YCENT_GD
         LERROR = .TRUE.
      ENDIF
 
      WRITE( VAL1, 94000 ) VGTOP3D
      WRITE( VAL2, 94000 ) VGTOP_GD
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94420 ) VGTOP3D, VGTOP_GD
         LERROR = .TRUE.
      ENDIF

      DO L = 1 , NLAYS3D + 1
         WRITE( VAL1, 94000 ) VGLVS3D(  L )
         WRITE( VAL2, 94000 ) VGLVS_GD( L )
         IF( VAL1 .NE. VAL2 ) THEN
            WRITE( LOGUNIT, 94440 ) L, VGLVS3D( L ),  L,
     &                              VGLVS_GD( L )      
            LERROR = .TRUE.
         ENDIF
      ENDDO
 
      IF( .NOT. CHECK3( MET_CRO_3D_FIN, 'ALL', SDATE, STIME ) ) THEN
         MSG = 'Requested time is not on the ' // MET_CRO_3D_FIN
     &            // ' file'
         WRITE( LOGUNIT, 94480 ) MSG
         LERROR = .TRUE.
      ENDIF
             
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  If inconsistency found, then stop, else return
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( .NOT. LERROR ) THEN
         WRITE( LOGUNIT, 94460 )
      ELSE
         MSG = 'MET_CRO_3D_FIN file inconsistent: stopping' 
         CALL M3ERR( PNAME, 0, 0, MSG, .TRUE. )
      ENDIF
     
      RETURN

C************************* FORMAT STATEMENTS ***************************

94000 FORMAT( E15.5 )
94020 FORMAT(10X, 'MET_CRO_3D_FIN FTYPE = ', I3, ' COORD FTYPE', ' = ', I3 )
94040 FORMAT(10X, 'MET_CRO_3D_FIN NCOLS = ', I3, ' COORD NCOLS', ' = ', I3 )
94060 FORMAT(10X, 'MET_CRO_3D_FIN NROWS = ', I3, ' COORD NROWS', ' = ', I3 )
94080 FORMAT(10X, 'MET_CRO_3D_FIN NLAYS = ', I3, ' COORD NLAYS', ' = ', I3 )
94180 FORMAT(10X, 'MET_CRO_3D_FIN NTHIK = ', I3, ' COORD NTHIK', ' = ', I3 )
94200 FORMAT(10X, 'MET_CRO_3D_FIN GDTYP = ', I3, ' COORD GDTYP', ' = ', I3 )

94220 FORMAT(10X, 'MET_CRO_3D_FIN P_ALP = ', 1PE12.5,
     &            ' COORD  P_ALP', ' = ', 1PE12.5 )

94240 FORMAT(10X, 'MET_CRO_3D_FIN P_BET = ', 1PE12.5,
     &            ' COORD  P_BET', ' = ', 1PE12.5 )

94260 FORMAT(10X, 'MET_CRO_3D_FIN P_GAM = ', 1PE12.5,
     &            ' COORD  P_GAM', ' = ', 1PE12.5 )

94280 FORMAT(10X, 'MET_CRO_3D_FIN XORIG = ', 1PE12.5,
     &            ' COORD  XORIG', ' = ', 1PE12.5 )

94300 FORMAT(10X, 'MET_CRO_3D_FIN YORIG = ', 1PE12.5,
     &            ' COORD  YORIG', ' = ', 1PE12.5 )
94320 FORMAT(10X, 'MET_CRO_3D_FIN XCELL = ', 1PE12.5,
     &            ' COORD  XCELL', ' = ', 1PE12.5 )

94340 FORMAT(10X, 'MET_CRO_3D_FIN YCELL = ', 1PE12.5,
     &            ' COORD  YCELL', ' = ', 1PE12.5 )
   
94360 FORMAT(10X, 'MET_CRO_3D_FIN XCENT = ', 1PE12.5,
     &            ' COORD  XCENT', ' = ', 1PE12.5 )
94380 FORMAT(10X, 'MET_CRO_3D_FIN YCENT = ', 1PE12.5,
     &            ' COORD  YCENT', ' = ', 1PE12.5 )
 
94420 FORMAT(10X, 'MET_CRO_3D_FIN VGTOP = ', 1PE12.5,
     &            ' COORD  VGTOP', ' = ', 1PE12.5 )
 
94440 FORMAT(10X, 'MET_CRO_3D_FIN VGLVS(', I2, ' ) = ', 1PE12.5,
     &            ' COORD VGLVS', '(', I2, ' ) = ', 1PE12.5 )

94460 FORMAT(10X, 'NONE' )
94480 FORMAT( A )

      END
@


1.1.1.1
log
@CMAQv4_5_1 release
@
text
@@
