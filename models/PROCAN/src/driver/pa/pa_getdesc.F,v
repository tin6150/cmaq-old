head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_5_1:1.1.1.1 ASMD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2006.03.13.19.28.41;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.03.13.19.28.41;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***************************************************************************
C  Significant portions of Models-3/CMAQ software were developed by        *
C  Government employees and under a United States Government contract.     *
C  Portions of the software were also based on information from non-       *
C  Federal sources, including software developed by research institutions  *
C  through jointly funded cooperative agreements. These research institu-  *
C  tions have given the Government permission to use, prepare derivative   *
C  works, and distribute copies of their work to the public within the     *
C  Models-3/CMAQ software release and to permit others to do so. EPA       *
C  therefore grants similar permissions for use of Models-3/CMAQ software, *
C  but users are requested to provide copies of derivative works to the    *
C  Government without re-strictions as to use by others.  Users are        *
C  responsible for acquiring their own copies of commercial software       *
C  associated with the Models-3/CMAQ release and are also responsible      *
C  to those vendors for complying with any of the vendors' copyright and   *
C  license restrictions. In particular users must obtain a Runtime license *
C  for Orbix from IONA Technologies for each CPU used in Models-3/CMAQ     *
C  applications.                                                           *
C                                                                          *
C  Portions of I/O API, PAVE, and the model builder are Copyrighted        *
C  1993-1997 by MCNC--North Carolina Supercomputing Center and are         *
C  used with their permissions subject to the above restrictions.          *
C***************************************************************************

C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/PROCAN/src/driver/pa/pa_getdesc.F,v 1.3 1998/06/19 11:38:38 yoj Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C @@(#)pa_getdesc.F	1.1 /project/mod3/PROCAN/src/driver/pa/SCCS/s.pa_getdesc.F 04 Jul 1997 14:13:25

      SUBROUTINE GETDESC( LASTCMND )

C***********************************************************************
C
C  FUNCTION: To process the DESC command 
C
C  PRECONDITIONS: None
C 
C  KEY SUBROUTINES/FUNCTIONS CALLED: GETCHR
C                                    GETQUOTE
C
C  REVISION HISTORY: Prototype created by Jerry Gipson, August, 1996
C                    Modified May, 1997 by Jerry Gipson to be consistent
C                      with beta CTM
C                    Modified Sept, 1997 by Jerry Gipson to be consistent
C                      with targeted CTM
C
C***********************************************************************
      IMPLICIT NONE
      
C..INCLUDES:
      INCLUDE SUBST_IODECL 
      INCLUDE 'PA_GLOBAL.EXT'
      INCLUDE 'PA_PARSE.EXT'
      INCLUDE 'PA_VARS.EXT'
      
C..ARGUMENTS:
      CHARACTER*16  LASTCMND  ! Previous command
                                        
C..PARAMETERS: None

C..EXTERNAL FUNCTIONS: None

C..SAVED LOCAL VARIABLES: None

C..SCRATCH LOCAL VARIABLES:
      CHARACTER*1 APOSTROPHE
C***********************************************************************
      DATA APOSTROPHE /''''/

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c Make sure the = sign is there
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( CHR .NE. '=' ) THEN
         EXITSTAT = 2
         WRITE( MSG, 94000 ) 
         CALL M3MESG( MSG )
         WRITE( MSG, 94500 ) LINNUM, INBUF
         CALL M3MESG( MSG )
         WRITE( MSG, 94520 ) CHR
         CALL M3MESG( MSG )
         CALL M3EXIT( 'GETDESC', IZERO, IZERO, ' ', EXITSTAT )
      ELSE
         CALL GETCHR
      ENDIF

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c Check for a leading apostrophe and get the description
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( CHR .NE. APOSTROPHE ) THEN
         EXITSTAT = 2
         WRITE( MSG, 94020 ) 
         CALL M3MESG( MSG )
         WRITE( MSG, 94500 ) LINNUM, INBUF
         CALL M3MESG( MSG )
         WRITE( MSG, 94520 ) CHR
         CALL M3MESG( MSG )
         CALL M3EXIT( 'GETDESC', IZERO, IZERO, ' ', EXITSTAT )
      ELSE
         CALL GETQUOTE
         IF( LASTCMND .EQ. 'IRR_OUTPUT' ) THEN
            IRRDESC( NIRROUT ) = QUOTE
         ELSE
            WRITE( MSG, 94600 ) 
            CALL M3MESG( MSG )
            WRITE( MSG, 94500 ) LINNUM, INBUF
            CALL M3MESG( MSG )
         ENDIF
      ENDIF

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c Check for the ending semicolon
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( CHR .NE. ';' ) THEN
         WRITE( MSG, 94040 ) 
         CALL M3MESG( MSG )
         WRITE( MSG, 94500 ) LINNUM, INBUF
         CALL M3MESG( MSG )
         WRITE( MSG, 94520 ) CHR
         CALL M3MESG( MSG )
         CALL M3EXIT( 'GETDESC', IZERO, IZERO, ' ', EXITSTAT )
      ELSE
         CALL GETCHR
         RETURN
      ENDIF
      
 
C*********************** FORMAT STATEMENTS ***************************** 
 
      
94000 FORMAT( 'ERROR: Equal sign must follow the DESCRIPTION command' )
94020 FORMAT( 'ERROR: Apostrophe expected after the = sign in the',
     &              ' DESCRIPTION command' )
94040 FORMAT( 'ERROR: The DESCRIPTION command must be terminated by a ;' )
94500 FORMAT( '       Line No. ', I4, ': ', A )
94520 FORMAT( '       Character found: ', A )
94600 FORMAT( 'WARNING: DESCRIPTION command ignored, does not follow',
     &                ' an IRR_OUTPUT command' )

      END


@


1.1.1.1
log
@CMAQv4_5_1 release
@
text
@@
