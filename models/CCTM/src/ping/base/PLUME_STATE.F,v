head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_5_1:1.1.1.1 ASMD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2006.03.15.20.43.52;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.03.15.20.43.52;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************

C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/CCTM/src/ping/base/PLUME_STATE.F,v 1.3 2002/04/05 18:23:22 yoj Exp $

C what(1) key, module and SID; SCCS file; date and time of last delta:
C %W% %P% %G% %U%

C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
      MODULE PLUME_STATE

C depends on PLUME_COORD being called in PLUME_LOC module

      USE PLUME_LOC   ! inherits PING_GLOBDIM

      IMPLICIT NONE

C Plume history flag
      INTEGER, ALLOCATABLE, SAVE :: PFLAG( : )

C Pointer to active plumes
      INTEGER, ALLOCATABLE, SAVE :: PLUMEPTR( : )

      CONTAINS

         SUBROUTINE SET_PFLAG ( INDX, VAL )

         INTEGER, INTENT( IN )  :: INDX
         INTEGER, INTENT( IN )  :: VAL

         INCLUDE SUBST_IODECL    ! I/O definitions and declarations

         CHARACTER( 200 ) :: MSG
         CHARACTER( 16 )  :: PNAME = 'SET_PFLAG'

         INTEGER NPLUMTOT, ALLOCSTAT
         INTEGER I
         LOGICAL OK
         INTEGER, SAVE :: LOGDEV
         LOGICAL, SAVE :: FIRSTIME = .TRUE.

         IF ( FIRSTIME ) THEN
            FIRSTIME = .FALSE.
            LOGDEV = INIT3 ()
            
            CALL GET_NMEPSES ( )

            NPLUMTOT = N_MEPSES * N_RLEASES

            ALLOCATE ( PFLAG( NPLUMTOT ), STAT = ALLOCSTAT )
            IF ( ALLOCSTAT .NE. 0 ) THEN
               MSG = '*** PFLAG Memory allocation failed'
               CALL M3ERR ( PNAME, -999, -999, MSG, .TRUE.)
               END IF

            DO I = 1, NPLUMTOT
               PFLAG( I ) = 0
               END DO

            END IF   ! FIRSTIME

!        write( logdev,* ) '@@@@ Set_Pflag - Indx, Val: ', INDX, VAL

         PFLAG( INDX ) = VAL

         RETURN

         END SUBROUTINE SET_PFLAG

         SUBROUTINE PING_UPDATEPTR ( NPLUMES, NPACTIVE )

         INTEGER, INTENT( IN )  :: NPLUMES
         INTEGER, INTENT( OUT ) :: NPACTIVE

         INCLUDE SUBST_IODECL    ! I/O definitions and declarations

         CHARACTER( 200 ) :: MSG
         CHARACTER( 16 )  :: PNAME = 'PING_UPDATEPTR'

         INTEGER :: NPLUMTOT, ALLOCSTAT
         INTEGER :: I, MY_I
         LOGICAL :: OK
         INTEGER, SAVE :: LOGDEV
         LOGICAL, SAVE :: FIRSTIME = .TRUE.

         IF ( FIRSTIME ) THEN
            FIRSTIME = .FALSE.
            LOGDEV = INIT3 ()
            
            CALL GET_NMEPSES ( )

            NPLUMTOT = N_MEPSES * N_RLEASES

            ALLOCATE ( PLUMEPTR( NPLUMTOT ), STAT = ALLOCSTAT )
            IF ( ALLOCSTAT .NE. 0 ) THEN
               MSG = '*** PLUMEPTR Memory allocation failed'
               CALL M3ERR ( PNAME, -999, -999, MSG, .TRUE.)
               END IF

            NPACTIVE = 0
            DO I = 1, NPLUMTOT
               PLUMEPTR( I ) = 0
               END DO

            END IF   ! FIRSTIME

         NPACTIVE = 0
         DO I = 1, MY_NPLUMES
            MY_I = MY_PLUMEPTR( I )
            IF ( PFLAG( MY_I ) .EQ. 2 .OR. PFLAG( MY_I ) .EQ. 3 ) THEN
               NPACTIVE = NPACTIVE + 1
               PLUMEPTR( NPACTIVE ) = MY_I
               END IF
            END DO

         WRITE( LOGDEV,* ) ' '
         IF ( NPACTIVE .NE. 0 ) THEN
            WRITE( LOGDEV,* ) '@@@@ Ping_UpDatePTR - NPactive, Latest PlumePtr: ',
     &                         NPACTIVE, PLUMEPTR( NPACTIVE )
            ELSE
            WRITE( LOGDEV,* ) '@@@@ Ping_UpDatePTR - NPactive: ',
     &                         NPACTIVE
            END IF

         RETURN

         END SUBROUTINE PING_UPDATEPTR

      END MODULE PLUME_STATE
@


1.1.1.1
log
@CMAQv4_5_1 release
@
text
@@
