head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_5_1:1.1.1.1 ASMD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2006.03.15.20.43.52;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.03.15.20.43.52;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************

C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/CCTM/src/ping/base/ping_cksummer.F,v 1.4 2004/09/28 18:04:26 yoj Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C @@(#)cksummer.F        1.1 /project/mod3/CMAQ/src/util/util/SCCS/s.cksummer.F 03 Jun 1997 12:08:53

C=========================================================================
C This file, ping_cksummer.F contains:
C    SUBROUTINE PING_CKSUMMER
C=========================================================================

      SUBROUTINE PING_CKSUMMER ( SCIPROC, CPLUME, JDATE, JTIME )

C Function:
C     Sum concentrations over entire fake grid of CPLUME 

C Preconditions:
C     All species used in the CPLUME array are derived from the CTM output
C     subset.
C     Requires CPLUME array to be dimensioned as:
C     CPLUME( 1:N_GC_CONC+N_AE_CONC+N_NR_SPC+N_TR_SPC+4,NPILLARS,NPLUMTOT )
C     where N_PILLARS = no of "cells" across plume,
C           NPLUMTOT = N_MEPSES*N_RLEASES,
C           N_MEPSES = global no. of sources windowed from PDM domain,
C           N_RLEASES = no. of releases for period (ususally 25 hrs) in PDM

C Revision History:
C    Original version ??? Copied from cksummer (jeff)
C    14 Aug 04 J.Young: add aero, nonr, and trace spc
C-----------------------------------------------------------------------

      USE HGRD_DEFN             ! horizontal domain specifications
      USE CGRID_SPCS            ! CGRID species number and offsets
      USE PING_GLOBDIM
      USE PLUME_PARM

!     USE SUBST_MODULES              ! stenex
!!    USE SUBST_GLOBAL_SUM_MODULE    ! stenex

      IMPLICIT NONE

      INCLUDE SUBST_GC_SPC      ! gas chemistry species table
      INCLUDE SUBST_AE_SPC      ! aerosol species table
      INCLUDE SUBST_NR_SPC      ! non-reactive species table
      INCLUDE SUBST_TR_SPC      ! tracer species table
      INCLUDE SUBST_IOPARMS     ! I/O parameters definitions
      INCLUDE SUBST_IODECL      ! I/O definitions and declarations

      CHARACTER( * ) SCIPROC    ! science process name
      REAL      :: CPLUME( :,:,: )
      INTEGER      JDATE        ! current model date, coded YYYYDDD
      INTEGER      JTIME        ! current model time, coded HHMMSS

C Parameters:

      REAL, PARAMETER :: CMIN = 0.0

C Local variables:
 
      LOGICAL, SAVE :: FIRSTIME = .TRUE.
      INTEGER, SAVE :: LOGDEV         ! FORTRAN unit number for log file

      CHARACTER( 16 ), SAVE :: PNAME = 'PING_CKSUMMER'
      CHARACTER( 96 ) :: XMSG = ' '
!                                         1234567890123456
!     CHARACTER( 16 ), SAVE :: OUTNAME = 'PLUME_FLOOR_FILE'
      CHARACTER( 16 ) :: APPL = 'CTM_APPL'
      CHARACTER( 48 ) :: EQNAME
      CHARACTER( 12 ) :: PRESTR = 'PLUME_FLOOR_'
      CHARACTER(  3 ) :: CMYPE
      CHARACTER( 96 ), SAVE :: DEVNAME ! Name of output file.

      INTEGER, SAVE :: OUTDEV    ! FORTRAN unit number for neg conc ascii file

      INTEGER, EXTERNAL :: GETEFILE, TRIMLEN
 
      LOGICAL ::  RDONLY = .FALSE.
      LOGICAL ::  FMTTED = .TRUE.
      INTEGER     STATUS       !  ENVSTR status

      INTEGER     S, C, R, V, STRT, FINI
      INTEGER, SAVE :: NPLUMTOT = 0
      REAL( 8 ) :: DBL_CKSUM
      REAL         GC_CKSUM, AE_CKSUM, NR_CKSUM, TR_CKSUM
      REAL, SAVE :: GCELLS

      LOGICAL, SAVE :: OPFLG = .TRUE.               ! open file flag
      LOGICAL     EXFLG                             ! write header flag

C-----------------------------------------------------------------------

      IF ( FIRSTIME ) THEN
         FIRSTIME = .FALSE.
         LOGDEV = INIT3()

C Get CGRID offsets
         CALL CGRID_MAP( NSPCSD, GC_STRT, AE_STRT, NR_STRT, TR_STRT )

         CALL GET_NMEPSES ( )

         NPLUMTOT = N_MEPSES * N_RLEASES

!        GCELLS = SUBST_GLOBAL_SUM ( FLOAT( NPLUMTOT * NPILLARS ) )
!        GCELLS = FLOAT( NPLUMTOT * ( NPILLARS + 4 ) )
         GCELLS = FLOAT( NPLUMTOT * NPILLARS )

!        CALL ENVSTR( OUTNAME, 'Floor file', 'CPLUME_FLOOR', DEVNAME, STATUS )
!        IF ( STATUS .NE. 0 ) WRITE( LOGDEV, '(5X, A)' ) 'Floor file'
!        IF ( STATUS .EQ. 1 ) THEN
!           XMSG = 'Environment variable improperly formatted'
!           CALL M3EXIT( PNAME, JDATE, JTIME, XMSG, XSTAT2 )
!           ELSE IF ( STATUS .EQ. -1 ) THEN
!           XMSG = 'Environment variable set, but empty ... Using default:'
!           WRITE( LOGDEV, '(5X, A, I9)' ) XMSG, JTIME
!           ELSE IF ( STATUS .EQ. -2 ) THEN
!           XMSG = 'Environment variable not set ... Using default:'
!           WRITE( LOGDEV, '(5X, A, I9)' ) XMSG, JTIME
!           END IF

         CALL NAMEVAL ( APPL, EQNAME )
         WRITE( CMYPE,'(I3.3)' ) MYPE
         DEVNAME = PRESTR // CMYPE // '.' // EQNAME( 1:TRIMLEN( EQNAME ) )

         END IF

      EXFLG = .TRUE.

      DBL_CKSUM = 0.0
      IF ( N_GC_SPC .GT. 0 ) THEN

         STRT = GC_STRT
         FINI = STRT - 1 + N_GC_SPC

         DO R = 1, NPLUMTOT
!           DO C = 1, NPILLARS + 4
            DO C = 1, NPILLARS
               V = 0
               DO S = STRT, FINI
                  V = V + 1
                  DBL_CKSUM = DBL_CKSUM + CPLUME( S,C,R )
                  IF ( CPLUME( S,C,R ) .LT. CMIN ) THEN
                     IF ( EXFLG ) THEN
                        EXFLG = .FALSE.
                        IF ( OPFLG ) THEN
                           OPFLG = .FALSE.
C                          open output ASCII file
                           OUTDEV = GETEFILE ( DEVNAME, RDONLY, FMTTED, PNAME )
                           END IF
                        WRITE( OUTDEV, 1001 ) CMIN, SCIPROC
                        END IF
                     WRITE( OUTDEV, 1003 ) JDATE, JTIME, R, C, S,
     &                                     GC_SPC( V ), CPLUME( S,C,R )
                     CPLUME( S,C,R ) = CMIN
                     END IF
                  END DO
               END DO
            END DO

         GC_CKSUM = DBL_CKSUM

         ELSE

         GC_CKSUM = 0.0
 
         END IF
     
      DBL_CKSUM = 0.0
      IF ( N_AE_SPC .GT. 0 ) THEN

         STRT = AE_STRT
         FINI = AE_STRT - 1 + N_AE_SPC

         DO R = 1, NPLUMTOT
!           DO C = 1, NPILLARS + 4
            DO C = 1, NPILLARS
               V = 0
               DO S = STRT, FINI
                  V = V + 1
                  DBL_CKSUM = DBL_CKSUM + CPLUME( S,C,R )
                  IF ( CPLUME( S,C,R ) .LT. CMIN ) THEN
                     IF ( EXFLG ) THEN
                        EXFLG = .FALSE.
                        IF ( OPFLG ) THEN
                           OPFLG = .FALSE.
C                          open output ASCII file
                           OUTDEV = GETEFILE ( DEVNAME, RDONLY, FMTTED, PNAME )
                           END IF
                        WRITE( OUTDEV, 1001 ) CMIN, SCIPROC
                        END IF
                     WRITE( OUTDEV, 1003 ) JDATE, JTIME, R, C, S,
     &                                     AE_SPC( V ), CPLUME( S,C,R )
                     CPLUME( S,C,R ) = CMIN
                     END IF
                  END DO
               END DO
            END DO

         AE_CKSUM = DBL_CKSUM

         ELSE

         AE_CKSUM = 0.0
 
         END IF
     
      DBL_CKSUM = 0.0
      IF ( N_NR_SPC .GT. 0 ) THEN

         STRT = NR_STRT
         FINI = STRT - 1 + N_NR_SPC

         DO R = 1, NPLUMTOT
!           DO C = 1, NPILLARS + 4
            DO C = 1, NPILLARS
               V = 0
               DO S = STRT, FINI
                  V = V + 1
                  DBL_CKSUM = DBL_CKSUM + CPLUME( S,C,R )
                  IF ( CPLUME( S,C,R ) .LT. CMIN ) THEN
                     IF ( EXFLG ) THEN
                        EXFLG = .FALSE.
                        IF ( OPFLG ) THEN
                           OPFLG = .FALSE.
C                          open output ASCII file
                           OUTDEV = GETEFILE ( DEVNAME, RDONLY, FMTTED, PNAME )
                           END IF
                        WRITE( OUTDEV, 1001 ) CMIN, SCIPROC
                        END IF
                     WRITE( OUTDEV, 1003 ) JDATE, JTIME, R, C, S,
     &                                     NR_SPC( V ), CPLUME( S,C,R )
                     CPLUME( S,C,R ) = CMIN
                     END IF
                  END DO
               END DO
            END DO

         NR_CKSUM = DBL_CKSUM

         ELSE

         NR_CKSUM = 0.0
 
         END IF
     
      DBL_CKSUM = 0.0
      IF ( N_TR_SPC .GT. 0 ) THEN

         STRT = TR_STRT
         FINI = STRT - 1 + N_TR_SPC

         DO R = 1, NPLUMTOT
!           DO C = 1, NPILLARS + 4
            DO C = 1, NPILLARS
               V = 0
               DO S = STRT, FINI
                  V = V + 1
                  DBL_CKSUM = DBL_CKSUM + CPLUME( S,C,R )
                  IF ( CPLUME( S,C,R ) .LT. CMIN ) THEN
                     IF ( EXFLG ) THEN
                        EXFLG = .FALSE.
                        IF ( OPFLG ) THEN
                           OPFLG = .FALSE.
C                          open output ASCII file
                           OUTDEV = GETEFILE ( DEVNAME, RDONLY, FMTTED, PNAME )
                           END IF
                        WRITE( OUTDEV, 1001 ) CMIN, SCIPROC
                        END IF
                     WRITE( OUTDEV, 1003 ) JDATE, JTIME, R, C, S,
     &                                     TR_SPC( V ), CPLUME( S,C,R )
                     CPLUME( S,C,R ) = CMIN
                     END IF
                  END DO
               END DO
            END DO

         TR_CKSUM = DBL_CKSUM

         ELSE

         TR_CKSUM = 0.0
 
         END IF
     
!     WRITE( LOGDEV, 1007 ) SCIPROC, SUBST_GLOBAL_SUM( GC_CKSUM ) / GCELLS

      IF ( N_TR_SPC .EQ. 0 ) THEN
         WRITE( LOGDEV,1005 ) SCIPROC,
     &                        GC_CKSUM / GCELLS,
     &                        AE_CKSUM / GCELLS,
     &                        NR_CKSUM / GCELLS
         ELSE
         WRITE( LOGDEV,1007 ) SCIPROC,
     &                        GC_CKSUM / GCELLS,
     &                        AE_CKSUM / GCELLS,
     &                        NR_CKSUM / GCELLS,
     &                        TR_CKSUM / GCELLS
         END IF

      RETURN

1001  FORMAT(  5X, 'Concentrations less than, but reset to', 1PE11.3,
     &         1X, 'in', A16
     &       / 9X, 'Date:Time',
     &         3X, 'Plume', 2X, 'Pillar', 3X, '--- Species ---------',
     &          2X, 'Value before reset' )

1003  FORMAT( 5X, I8, ':', I6.6, I5, 2I7, 2X, '(', A16, ')', 1PE14.3 )

1005  FORMAT( 1X, 'after',
     &        1X, A09, 1X, 'G ', 1PE13.7,
     &                 1X, 'A ', 1PE13.7,
     &                 1X, 'N ', 1PE13.7 )

1007  FORMAT( 1X, 'after',
     &        1X, A09, 1X, 'G ', 1PE13.7,
     &                 1X, 'A ', 1PE13.7,
     &                 1X, 'N ', 1PE13.7,
     &                 1X, 'T ', 1PE13.7 )

      END SUBROUTINE PING_CKSUMMER
@


1.1.1.1
log
@CMAQv4_5_1 release
@
text
@@
