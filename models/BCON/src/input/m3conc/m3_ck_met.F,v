head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_5_1:1.1.1.1 ASMD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2006.03.21.13.43.00;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.03.21.13.43.00;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************

C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/BCON/src/input/m3conc/m3_ck_met.F,v 1.2 2002/04/12 14:19:22 yoj Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C %W% %P% %G% %U%


      SUBROUTINE CK_MET_FL( LOGUNIT, SDATE, STIME, TSTEP, NSTEPS,
     &                      CTM_FL_NAME )

C*************************************************************************
C
C  FUNCTION: To check input MET_CRO_3D_CRS file for consistency with
C            the  CTM_CONC file
C             
C  PRECONDITIONS: None
C 
C  KEY SUBROUTINES/FUNCTIONS CALLED: None
C
C  REVISION HISTORY: Prototype created by Jerry Gipson, May, 1999
C                   C*************************************************************************
      IMPLICIT NONE     

C..INCLUDE FILES:
      INCLUDE SUBST_IOPARMS     ! IOAPI parameters
      INCLUDE SUBST_IOFDESC     ! IOAPI file description
      INCLUDE SUBST_IODECL      ! IOAPI declarations

      INCLUDE 'BC_PARMS.EXT'    ! BCON paramters

C..ARGUMENTS:
      CHARACTER*16  CTM_FL_NAME( * )              ! Names of CTM files

      INTEGER LOGUNIT                 ! Unit number for output log
      INTEGER NSTEPS                  ! No. of time steps
      INTEGER SDATE                   ! Start date
      INTEGER STIME                   ! Start time
      INTEGER TSTEP                   ! Time step

C..PARAMETERS: None

C..EXTERNAL FUNCTIONS: None

C..SAVED LOCAL VARIABLES: None

C..SCRATCH LOCAL VARIABLES:
      CHARACTER*80  MSG               ! Log message
      CHARACTER*16  PNAME             ! Program Name
      CHARACTER*15  VAL1              ! Character value of real
      CHARACTER*15  VAL2              ! Character value of real

      INTEGER JDATE       ! Current date
      INTEGER JTIME       ! Current time
      INTEGER N, L        ! Loop indices
      INTEGER FTYPE1      ! File 1 file type
      INTEGER NCOLS1      ! File 1 number of columns
      INTEGER NROWS1      ! File 1 number of rows
      INTEGER NLAYS1      ! File 1 number of levels
      INTEGER NTHIK1      ! File 1 boundary thickness
      INTEGER GDTYP1      ! File 1 horizontal grid type
      INTEGER VGTYP1      ! File 1 Vertical coordinate type

      LOGICAL LERROR      ! Error Flag
      LOGICAL LFIRST      ! First time flag
 
      REAL P_ALP1         ! File 1 map projection parameter      
      REAL P_BET1         ! File 1 map projection parameter   
      REAL P_GAM1         ! File 1 map projection parameter
      REAL XORIG1         ! File 1 X-origin
      REAL YORIG1         ! File 1 Y-origin
      REAL XCELL1         ! File 1 X-dimension of cells
      REAL YCELL1         ! File 1 Y-dimension of cells
      REAL XCENT1         ! File 1 X-center of coordinate system
      REAL YCENT1         ! File 1 Y-center of coordinate system
      REAL VGTOP1         ! File 1 model top

      REAL VGLVS1( MXLAYS3 + 1 )     ! File vertical layer heights

   
C**********************************************************************
      DATA PNAME      / 'CK_MET_FL' /

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Write out report data
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      MSG = '  MET_CRO_3D_CRS File being checked for consistent ' //
     &      'header data' 
      CALL M3MESG( MSG )

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Get header data for CTM file 1 and create a list of species in the
c  CTM files
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( .NOT. DESC3 ( CTM_FL_NAME( 1 ) ) ) THEN
         MSG = 'Could not read DESC of  ' // CTM_FL_NAME( 1 ) 
     &         // ' file'
         CALL M3ERR( PNAME, 0, 0, MSG, .TRUE. )
      ENDIF

      FTYPE1 = FTYPE3D
      NCOLS1 = NCOLS3D
      NROWS1 = NROWS3D
      NLAYS1 = NLAYS3D
      NTHIK1 = NTHIK3D
      GDTYP1 = GDTYP3D
      P_ALP1 = P_ALP3D
      P_BET1 = P_BET3D
      P_GAM1 = P_GAM3D
      XORIG1 = XORIG3D
      YORIG1 = YORIG3D
      XCELL1 = XCELL3D
      YCELL1 = YCELL3D
      XCENT1 = XCENT3D
      YCENT1 = YCENT3D
      VGTYP1 = VGTYP3D
      VGTOP1 = VGTOP3D
      DO L = 1 , NLAYS3D + 1
         VGLVS1( L ) = VGLVS3D( L )
      ENDDO
     
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Open the MET_CRO_3D_CRS file
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( .NOT. OPEN3( MET_CRO_3D_CRS, FSREAD3, PNAME ) ) THEN
         MSG = 'Could not open ' // MET_CRO_3D_CRS // ' file'
         CALL M3ERR( PNAME, 0, 0, MSG, .TRUE. )
      ENDIF

      IF( .NOT. DESC3( MET_CRO_3D_CRS ) ) THEN
         MSG = 'Could not read DESC of  ' // MET_CRO_3D_CRS 
     &            // ' file'
         CALL M3ERR( PNAME, 0, 0, MSG, .TRUE. )
      ENDIF


ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Check MET_CRO_3D_CRS file
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      WRITE( MSG, '( ''     Differences found between files '', A, 
     &               '' and '', A, '':'' )' ) CTM_FL_NAME( 1 ), 
     &         MET_CRO_3D_CRS

      CALL M3MESG( MSG )

      LERROR = .FALSE.
         
      IF( FTYPE1 .NE. FTYPE3D ) THEN
         WRITE( LOGUNIT, 94020 ) FTYPE1, FTYPE3D
         LERROR = .TRUE.
      ENDIF

      IF( GDTYP1 .NE. GDTYP3D ) THEN
         WRITE( LOGUNIT, 94200 ) GDTYP1, GDTYP3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) P_ALP1
      WRITE( VAL2, 94000 ) P_ALP3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94220 ) P_ALP1, P_ALP3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) P_BET1
      WRITE( VAL2, 94000 ) P_BET3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94240 ) P_BET1, P_BET3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) P_GAM1
      WRITE( VAL2, 94000 ) P_GAM3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94260 ) P_GAM1, P_GAM3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) XORIG1
      WRITE( VAL2, 94000 ) XORIG3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94280 ) XORIG1, XORIG3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) YORIG1
      WRITE( VAL2, 94000 ) YORIG3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94300 ) YORIG1, YORIG3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) XCELL1
      WRITE( VAL2, 94000 ) XCELL3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94320 ) XCELL1, XCELL3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) YCELL1
      WRITE( VAL2, 94000 ) YCELL3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94340 ) YCELL1, YCELL3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) XCENT1
      WRITE( VAL2, 94000 ) XCENT3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94360 ) XCENT1, XCENT3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) YCENT1
      WRITE( VAL2, 94000 ) YCENT3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94380 ) YCENT1, YCENT3D
         LERROR = .TRUE.
      ENDIF

      WRITE( VAL1, 94000 ) VGTOP1
      WRITE( VAL2, 94000 ) VGTOP3D
      IF( VAL1 .NE. VAL2 ) THEN
         WRITE( LOGUNIT, 94420 ) VGTOP1, VGTOP3D
         LERROR = .TRUE.
      ENDIF

      DO L = 1 , NLAYS1 + 1
            WRITE( VAL1, 94000 ) VGLVS1(  L )
            WRITE( VAL2, 94000 ) VGLVS3D( L )
            IF( VAL1 .NE. VAL2 ) THEN
            WRITE( LOGUNIT, 94440 ) L, VGLVS1( L ), L,
     &                              VGLVS3D( L )      
            LERROR = .TRUE.
         ENDIF
      ENDDO
 
      JDATE = SDATE
      JTIME = STIME

      LFIRST = .TRUE.
      DO N = 1, NSTEPS
         IF( .NOT. CHECK3(  MET_CRO_3D_CRS, 'ALL', 
     &                      JDATE, JTIME ) ) THEN
            LERROR = .TRUE.
            IF( LFIRST ) THEN
               MSG = 'The following time steps are not on ' //
     &                   MET_CRO_3D_CRS
               WRITE( LOGUNIT, '( A )' ) MSG
               LFIRST = .FALSE.
            ENDIF
            WRITE( LOGUNIT, '( I7, 1X, I6 )' ) JDATE, JTIME
         ENDIF
         CALL NEXTIME( JDATE, JTIME, TSTEP )
      ENDDO
             
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  If inconsistency found, then stop, else return
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF( .NOT. LERROR ) THEN
         WRITE( LOGUNIT, 94460 )
      ELSE
         MSG = 'MET_CRO_3D_CRS file inconsistent: stopping' 
         CALL M3ERR( PNAME, 0, 0, MSG, .TRUE. )
      ENDIF

      RETURN

C************************* FORMAT STATEMENTS ***************************

94000 FORMAT( E15.5 )

94020 FORMAT(10X, 'CTM_CONC_1 FTYPE = ', I3, 3X,
     &            'MET_CRO_3D_CRS FTYPE = ', I3 )

94200 FORMAT(10X, 'CTM_CONC_1 GDTYP = ', I3, 3X,
     &            'MET_CRO_3D_CRS GDTYP = ', I3 )

94220 FORMAT(10X, 'CTM_CONC_1 P_ALP = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS P_ALP = ', 1PE12.5 )

94240 FORMAT(10X, 'CTM_CONC_1 P_BET = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS P_BET = ', 1PE12.5 )

94260 FORMAT(10X, 'CTM_CONC_1 P_GAM = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS P_GAM = ', 1PE12.5 )

94280 FORMAT(10X, 'CTM_CONC_1 XORIG = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS XORIG = ', 1PE12.5 )

94300 FORMAT(10X, 'CTM_CONC_1 YORIG = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS YORIG = ', 1PE12.5 )

94320 FORMAT(10X, 'CTM_CONC_1 XCELL = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS XCELL = ', 1PE12.5 )

94340 FORMAT(10X, 'CTM_CONC_1 YCELL = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS YCELL = ', 1PE12.5 )

94360 FORMAT(10X, 'CTM_CONC_1 XCENT = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS XCENT = ', 1PE12.5 )

94380 FORMAT(10X, 'CTM_CONC_1 YCENT = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS YCENT = ', 1PE12.5 )

94420 FORMAT(10X, 'CTM_CONC_1 VGTOP = ', 1PE12.5, 3X,
     &            'MET_CRO_3D_CRS VGTOP = ', 1PE12.5 )

94440 FORMAT(10X, 'CTM_CONC_1 VGLVS(', I2, ' ) = ', 1PE12.5,
     &            'MET_CRO_3D_CRS VGLVS(', I2, ' ) = ', 1PE12.5 )

94460 FORMAT(10X, 'NONE' )

      END
@


1.1.1.1
log
@CMAQv4_5_1 release
@
text
@@
