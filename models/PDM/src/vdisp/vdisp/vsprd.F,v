head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_5_1:1.1.1.1 ASMD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2006.03.13.19.27.27;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.03.13.19.27.27;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************


C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/PDM/src/vdisp/vdisp/vsprd.F,v 1.10 2005/08/29 20:35:06 jug Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C %W% %P% %G% %U%

C*********************************************************************
      SUBROUTINE VSPRD ( RUNTIM, IP, JP, SIGZ0, SZ0FAC, ITOP, IBOT,
     &                   TOP, BOT, EFFSTK, VM, DTHR, DELZ,
     &                   DZABOV, DZBELO, ILO, IHI, ZL )
C ********************************************************************
C
C** FUNCTION: Calculates vertical plume spread.
C             There are 2 kinds of formula to
C             deal with plume spread ;
C                 DZABOV: plume spread above the PBL
C                 DZBELO: plume spread inside the PBL

      USE HGRD_DEFN             ! horizontal domain specifications
      USE VGRD_DEFN
      
      IMPLICIT NONE

!     INCLUDE SUBST_HGRD_ID
!     INCLUDE SUBST_VGRD_ID

      INTEGER IP, JP, ITOP, IBOT, ILO, IHI, N
      
      REAL RUNTIM, SIGZ0, SZ0FAC, TOP, EFFSTK, TURBL, HTMIX, DTHR
      REAL DELZ, DZABOV, DZBELO, RTIM, FT, BOT, ZL( NLAYS )
      REAL VM(NROWS,NLAYS+4,10,NCOLS), USTAR, WSTAR, SIGW
      REAL TS, STAB, AEXPZ, TLW, ZC, SIGMAZ, DTHDZ
      REAL LENN, LENS, LENGTH, SIGMAZN, SIGMAZO
      REAL TIME, TIMSECO, TIMSEC, DTSEC, GAMMA, SMALL
      DATA GAMMA/.0098/, SMALL/.000001/
      SAVE GAMMA, SMALL

C** DZABOV : plume spread outside the PBL

      RTIM = ( RUNTIM - 1.0 ) * DTHR
!     write( *,* ) 'IN VSPRD:',RUNTIM, DTHR, IP, JP, ITOP, IBOT, ILO, IHI

      IF ( RTIM .GE. 4.0 .OR. ITOP .EQ. 0) THEN      
         DZABOV = 0.0
      ELSE
!        write( *,* ) 'RTIM,SIGZ0 :',RTIM, SIGZ0
         FT = ( 1.0 + 2.3 * ( RTIM ** 0.5 ) ) /
     &        ( 1.0 + 2.3 * ( DTHR ** 0.5 ) )
         DELZ = SIGZ0 * FT * SZ0FAC * 0.5    ! HALF OF PLUME DEPTH

         DZABOV = DELZ - ( TOP - EFFSTK )
         DZABOV = MAX( 0.0, DZABOV )
!        write( *,* ) 'FOR DZABOV: ', RTIM, FT, DELZ, DZABOV
      END IF

C Convert the travel time into secs
      TS = RTIM * 3600.0
      DTSEC = DTHR * 3600.0
!     write( *,* ) 'FOR DZABOV: ', RTIM, TS, DZABOV
C ..............................................

C** DZBELO : plume spread inside  PBL

      TURBL = VM( JP,5,5,IP )
      USTAR = VM( JP,4,5,IP )
      WSTAR = VM( JP,1,5,IP )
      HTMIX = VM( JP,6,5,IP )

C Note: scheme below from SPDM version of VSPRD:
   
      IF ( TOP .GT. HTMIX .AND. BOT .GE. HTMIX ) THEN
         ZC = 0.9 * HTMIX
      ELSE IF ( TOP .GT. HTMIX .AND. BOT .LT. HTMIX ) THEN
         ZC = 0.5 * ( HTMIX + BOT )
      ELSE
         ZC = 0.5 * ( TOP + BOT )
      END IF
      
C  Set the proper time.
      TIME = RTIM
      TIMSEC = TIME * 3600.       ! time in sec
      TIMSECO = TIMSEC - DTSEC        !last time in sec

C ====== Convective case ======
      IF ( TURBL .LT. 0.0 ) THEN
!        write( *,* ) 'Inside VSPRD conv. case: ', TURBL, WSTAR, HTMIX, ZC
         SIGW = 0.6 * WSTAR
         AEXPZ = -5.0 * ZC / HTMIX
         TLW = 0.15 * HTMIX * ( 1.0 - EXP( AEXPZ ) ) / SIGW
         TLW = MAX( TLW , 0.1 )
         N = 3600 / INT( DTSEC + 0.00001 )
!        SIGMAZ = SIGW * DTSEC / SQRT( 1.0 + 0.5 * N * DTSEC / TLW )
         SIGMAZN = SIGW * TIMSEC / SQRT( 1.0 + TIMSEC / ( 2.0 * TLW ) )
         SIGMAZO = SIGW * TIMSECO / SQRT( 1.0 + TIMSECO / ( 2.0 * TLW ) )
         IF ( SIGMAZO .LE. 0.0 ) THEN
            SIGMAZ = SIGZ0
         ELSE
            SIGMAZ  = MAX( 0.0, ( SIGMAZN - SIGMAZO ) )
         END IF

      ELSE

C ====== Neutral & Stable case ======
C From Niuestadt 1984, Caughey 1979.
C Alpha=0.36
C Gamma=0.52; 0.52**2=0.2704

C Approx calc. for stability parameter
         IF ( IHI. LE. 0 ) STOP 'IN VSPRD: IHI IS 0 OR LESS !'
         IF ( IHI .EQ. ILO ) THEN
            IHI = IHI + 1
            ILO = ILO - 1
            IF ( ILO .LE. 0 ) ILO = 1
         END IF
         DTHDZ = ( VM( JP,IHI,4,IP ) - VM( JP,ILO,4,IP ) )
     &         / ( ZL( IHI ) - ZL( ILO ) ) + GAMMA
         STAB = 9.8 * DTHDZ / ( VM( JP,1,4,IP ) + 273.15 )
          
         N = 3600 / INT( DTSEC + 0.00001 )
         STAB  = MAX( STAB, SMALL )        ! for avoiding unreasonable LENS 
         SIGW  = 1.3 * USTAR * ( 1 - ZC / HTMIX ) ** 0.75
         SIGW  = MAX( SIGW, 0.001 )        ! prevent from being 0
         LENN  = 0.36 * ZC
         LENS  = 0.2704 * SIGW / SQRT( STAB )
         LENGTH= ( LENN * LENS ) / ( LENN+ LENS )
         TLW   = LENGTH / SIGW                ! vertical Lagrangian time scale 
         
         SIGMAZ = SIGW * DTSEC / SQRT( 1.0 + 0.5 * FLOAT( N ) * DTSEC / TLW )
          
      END IF
      
      DZBELO = SZ0FAC * 0.5 * SIGMAZ    !-(CEFSTK-BOT); remember it's half-part
      DZBELO = MAX( 0.0, DZBELO )
      IF ( IBOT .EQ. -1 ) DZBELO = MAX( 50.0, DZBELO )        !for inside PBL
!     write(*,*) 'END OF VSPRD : ',SIGMAZ, DZBELO, DZABOV 

      RETURN
      END
@


1.1.1.1
log
@CMAQv4_5_1 release
@
text
@@
