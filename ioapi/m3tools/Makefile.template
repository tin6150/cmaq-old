#
#.........................................................................
# Version "@(#)$Header$"
# EDSS/Models-3 M3TOOLS
# Copyright (C) 1992-2002 MCNC and Carlie J. Coats, Jr., and
# (C) 2003-2004 Baron Advanced Meteorological Systems, LLC.
# Distributed under the GNU GENERAL PUBLIC LICENSE version 2
# See file "GPL.txt" for conditions of use.
#.........................................................................
#  Environment Variables:
#       BIN     machine/OS/compiler/mode type. Shows up as suffix
#               for "Makeinclude.${BIN}" to determine compilation
#               flags, and in ${OBJDIR} and $(INSTALL) to determine
#               binary directories
#       INSTALL installation-directory root, used for "make install":
#               "libioapi.a" and the tool executables will be installed
#               in $(INSTALL)/${BIN}
#.........................................................................
#  Directories:
#       ${BASEDIR}  is the root directory for the I/O API library source,
#                   the M3Tools and M3Test source,the  HTML documentation,
#                   and the (machine/compiler/flag-specific) binary
#                   object/library/executable directories.
#       $(SRCDIR)   is the source directory for the M3TOOLS
#       $(IODIR)    is the source directory for the I/O API library
#       ${OBJDIR}   is the current machine/compiler/flag-specific
#                   build-directory
#       $(F90DIR)   is the current machine/compiler/flag-specific
#                   build-directory for F90-based programs (SGI & Sun)
#.........................................................................
#
#       ---------------     Definitions:   -------------------------

.SUFFIXES: .m4 .c .F .f

BASEDIR = ${HOME}/apps
SRCDIR  = ${BASEDIR}/m3tools
IODIR   = ${BASEDIR}/ioapi
OBJDIR  = ${BASEDIR}/${BIN}
F90DIR  = ${BASEDIR}/${BIN}f90

# Architecture dependent stuff
# Assumes FC is an f90 (otherwise, "make f77").

include $(IODIR)/Makeinclude.${BIN}

include $(PVM_ROOT)/conf/$(PVM_ARCH).def

FFLAGS =  -I$(IODIR) -DIOAPICPL $(DEFINEFLAGS) $(FOPTFLAGS) $(ARCHFLAGS)

LDFLAGS = -I$(IODIR) -DIOAPICPL $(DEFINEFLAGS) $(ARCHFLAGS)

LIBS = -L${OBJDIR} -lioapi -lnetcdf  $(PVMLIBS) $(OMPLIBS) \
$(ARCHLIB) $(ARCHLIBS)

VPATH = ${OBJDIR}



fSRC = \
m3agmask.f m3agmax.f m3combo.f  m3cple.f   m3diff.f   m3edhdr.f  \
m3fake.f   m3interp.f m3pair.f  m3stat.f   m3tproc.f  m3tshift.f \
m3wndw.f   m3xtract.f m3merge.f mtxblend.f mtxbuild.f mtxcple.f  \
airs2m3.f  aggvars.f  agmask.f  agmax.f    bcwndw.f   mtxcalc.f  \
datshift.f factor.f   fills.f   gregdate.f juldate.f  kfxtract.f \
presterp.f projtool   sfcmet.f  selmrg2d.f statb.f    statc.f    \
statg.f    stati.f    statm.f   stats.f    utmtool.f  vertot.f

FSRC= \
bcstep.F   cdiffstep.F diffstep.F fakestep.F latlon.F    pairstep.F  \
presz.F    statbdry.F  statcust.F statgrid.F statiddat.F statspars.F \
statstep.F tshift.F    verstep.F  wndwstep.F xtstep.F

ESRC= $(IODIR)/CONST3.EXT  $(IODIR)/FDESC3.EXT  \
      $(IODIR)/IODECL3.EXT $(IODIR)/NETCDF.EXT  \
      $(IODIR)/PARMS3.EXT

OBJ = $(fSRC:.f=.o) $(FSRC:.F=.o)

F77EXE = \
bcwndw   datshift factor   gregdate juldate  kfxtract  \
latlon   m3diff   m3edhdr  m3fake   m3pair   m3stat    \
m3tshift m3wndw   m3xtract presz    utmtool  vertot

F90EXE = airs2m3  dayagg   m3agmax  m3agmask m3cple    \
m3combo  m3interp m3merge  m3tproc  mtxblend mtxbuild  \
mtxcalc  mtxcple  presterp projtool selmrg2d

EXE = $(F77EXE)  $(F90EXE)


#      ----------------------   TOP-LEVEL TARGETS:   ------------------

all: $(EXE)

f77: $(F77EXE)

f90: $(F90EXE)

clean:
	cd ${OBJDIR}; rm $(EXE) $(OBJ)

install: $(INSTDIR)
	echo "Installing M3TOOLS in ${INSTDIR}"
	cd ${OBJDIR}; cp $(EXE) $(INSTDIR)

rmexe:
	cd ${OBJDIR}; rm $(EXE)

relink:
	make -i rmexe ; make all

links:
	ln -s      $(F90DIR)/dayagg   $(F90DIR)/m3agmax  \
$(F90DIR)/m3agmask $(F90DIR)/m3cple   $(F90DIR)/m3combo  \
$(F90DIR)/m3merge  $(F90DIR)/m3tproc  $(F90DIR)/mtxblend \
$(F90DIR)/mtxbuild $(F90DIR)/mtxcalc  $(F90DIR)/mtxcple  \
$(F90DIR)/presterp $(F90DIR)/selmrg2d                       ${OBJDIR}

gzip:
	cd ${OBJDIR}/..; gtar cvfzh  ${BIN}.tar.gz     \
${BIN}/libioapi.a ${BIN}/libnetcdf.a ${BIN}/libpvm3.a \
${BIN}/airs2m3    ${BIN}/bcwndw     ${BIN}/datshift   ${BIN}/factor  \
${BIN}/gregdate   ${BIN}/kfxtract   ${BIN}/latlon     ${BIN}/m3diff  \
${BIN}/m3edhdr    ${BIN}/m3fake     ${BIN}/m3pair     ${BIN}/m3stat  \
${BIN}/m3tshift   ${BIN}/m3wndw     ${BIN}/m3xtract   ${BIN}/presz   \
${BIN}/utmtool    ${BIN}/vertot     ${BIN}/dayagg     ${BIN}/m3cple  \
${BIN}/m3agmax    ${BIN}/m3agmask   ${BIN}/m3combo    ${BIN}/m3merge \
${BIN}/mtxblend   ${BIN}/mtxbuild   ${BIN}/mtxcalc    ${BIN}/mtxcple \
${BIN}/presterp   ${BIN}/selmrg2d   ${BIN}/ncgen      ${BIN}/ncdump


#      -----------------------   RULES:   -------------------------

%.o : %.mod        #  Disable "gmake"s obnoxious implicit Modula-2 rule !!

.F.o:
	cd ${OBJDIR}; $(FC) $(FPPFLAGS) $(FFLAGS) -c $(SRCDIR)/$<


.f.o:
	cd ${OBJDIR}; $(FC) $(FFLAGS) -c $(SRCDIR)/$<


#  ---------------------------  $(EXE) Program builds:  -----------------



airs2m3:  airs2m3.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o airs2m3 airs2m3.o $(LIBS)



DIFFS=m3diff.o diffstep.o cdiffstep.o

m3diff:  $(DIFFS)  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3diff $(DIFFS) $(LIBS)



PAIRS=m3pair.o pairstep.o

m3pair:  $(PAIRS)  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3pair $(PAIRS) $(LIBS)



m3edhdr:  m3edhdr.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3edhdr m3edhdr.o $(LIBS)



STATS=m3stat.o statbdry.o statcust.o \
      statgrid.o statiddat.o statspars.o \
      statb.o  statc.o statg.o stati.o \
      statm.o

m3stat: $(STATS) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3stat $(STATS) $(LIBS)



VERTS=vertot.o  verstep.o

vertot:  $(VERTS) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o vertot $(VERTS) $(LIBS)



XTRACS=m3xtract.o  xtstep.o

m3xtract:  $(XTRACS) $(ESRC)
	cd ${OBJDIR}; echo ${BIN}; echo $(ARCHLIB); $(FC) $(LDFLAGS) -o m3xtract $(XTRACS) $(LIBS)



TSHIFTS=m3tshift.o  tshift.o

m3tshift:  $(TSHIFTS) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3tshift $(TSHIFTS) $(LIBS)



BCWNDWS=bcwndw.o  bcstep.o

bcwndw: $(BCWNDWS) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o bcwndw $(BCWNDWS) $(LIBS)



WNDWS=m3wndw.o  wndwstep.o

m3wndw: $(WNDWS) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3wndw $(WNDWS) $(LIBS)



AGMAX=m3agmax.o agmax.o

m3agmax:  $(AGMAX) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3agmax $(AGMAX) $(LIBS)



AGMASK=m3agmask.o agmask.o

m3agmask:  $(AGMASK) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3agmask $(AGMASK) $(LIBS)



### TPROC=m3tproc.o taggreg.o

TPROC=m3tproc.o aggvars.o

m3tproc:  $(TPROC) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3tproc $(TPROC) $(LIBS)



datshift:  datshift.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o datshift datshift.o $(LIBS)


FAKE=m3fake.o fakestep.o fills.o

m3fake: $(FAKE) $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3fake $(FAKE)  $(LIBS)



m3combo: m3combo.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3combo m3combo.o  $(LIBS)



m3cple: m3cple.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3cple m3cple.o  $(LIBS)



m4cple: m4cple.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m4cple m4cple.o  $(LIBS)



m3interp: m3interp.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3interp m3interp.o  $(LIBS)



m3merge: m3merge.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o m3merge m3merge.o  $(LIBS)



mtxblend: mtxblend.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o mtxblend mtxblend.o  $(LIBS)



mtxbuild: mtxbuild.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o mtxbuild mtxbuild.o  $(LIBS)



mtxcalc: mtxcalc.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o mtxcalc mtxcalc.o  $(LIBS)



mtxcple: mtxcple.o  $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o mtxcple mtxcple.o  $(LIBS)



gregdate: gregdate.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o gregdate gregdate.o $(LIBS)



juldate:  juldate.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o juldate juldate.o $(LIBS)



latlon:  latlon.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o latlon latlon.o $(LIBS)



presz:  presz.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o presz presz.o $(LIBS)



selmrg2d:  selmrg2d.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o selmrg2d selmrg2d.o $(LIBS)



sfcmet:  sfcmet.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o sfcmet sfcmet.o $(LIBS)



factor:  factor.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o factor factor.o $(LIBS)



projtool: projtool.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o projtool projtool.o $(LIBS)



utmtool: utmtool.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o utmtool utmtool.o $(LIBS)



kfxtract: kfxtract.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o kfxtract kfxtract.o $(LIBS)



presterp: presterp.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -o presterp presterp.o $(LIBS)



dayagg: dayagg.o $(ESRC)
	cd ${OBJDIR}; $(FC) $(LDFLAGS) -I$(SRCDIR) -o dayagg dayagg.o  $(LIBS)


############################################################################
#
#	echo the relevant build-flags:

flags:
	echo "BIN=${BIN}"
	echo "FFLAGS=$(FFLAGS)"
	echo "LDFLAGS=$(LDFLAGS)"
	echo "LIBS=$(LIBS)"
	echo "ARCHFLAGS=$(ARCHFLAGS)"
	echo "ARCHLIB=$(ARCHLIB)"
	echo "ARCHLIBS=$(ARCHLIBS)"
	echo "OMPFLAGS=$(OMPFLAGS)"
	echo "OMPLIBS=$(OMPLIBS)"
	echo "FOPTFLAGS=$(FOPTFLAGS)"
	echo "COPTFLAGS=$(COPTFLAGS)"
	echo "PARFLAGS=$(PARFLAGS)"
	echo "PVM_ROOT=$(PVM_ROOT)"
	echo "PVMLIBS=$(PVMLIBS)"

