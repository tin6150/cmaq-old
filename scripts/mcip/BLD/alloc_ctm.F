
!***********************************************************************
!   Portions of Models-3/CMAQ software were developed or based on      *
!   information from various groups: Federal Government employees,     *
!   contractors working on a United States Government contract, and    *
!   non-Federal sources (including research institutions).  These      *
!   research institutions have given the Government permission to      *
!   use, prepare derivative works, and distribute copies of their      *
!   work in Models-3/CMAQ to the public and to permit others to do     *
!   so.  EPA therefore grants similar permissions for use of the       *
!   Models-3/CMAQ software, but users are requested to provide copies  *
!   of derivative works to the Government without restrictions as to   *
!   use by others.  Users are responsible for acquiring their own      *
!   copies of commercial software associated with Models-3/CMAQ and    *
!   for complying with vendor requirements.  Software copyrights by    *
!   the MCNC Environmental Modeling Center are used with their         *
!   permissions subject to the above restrictions.                     *
!***********************************************************************

! RCS file, release, date & time of last delta, author, state, [and locker]
! $Header: /project/work/rep/MCIP2/src/mcip2/alloc_ctm.F,v 1.6 2005/08/29 14:27:38 tlotte Exp $ 


SUBROUTINE alloc_ctm

!-------------------------------------------------------------------------------
! Name:     Allocate Arrays for CTM Dimensions
! Purpose:  Allocate arrays based on CTM grid.
! Revised:  14 Sep 2001  Original version.  (T. Otte)
!           27 Feb 2002  Renamed SURF2 as WIND10.  Removed RIB.  (T. Otte)
!           18 Mar 2003  Removed JDRATE.  (T. Otte)
!           09 Jun 2003  Added SNOCOV to METCRO2D.  (D. Schwede)
!                        Removed extraneous variables from output.  (T. Otte)
!           09 Aug 2004  Added JACOBS, WSPD10, WDIR10, SOIM1, SOIM2, SOIT1,
!                        SOIT2, SLTYP, JACOBF, QG, TEMP2, and LAI.  Restored
!                        GRIDBDY2D file to output.  Modified code so that arrays
!                        are made available in output only if user options in
!                        MM5 generate those data.  (T. Otte and D. Schwede)
!           29 Nov 2004  Added PURB.  (T. Otte)
!           25 Feb 2005  Eliminated GRIDCRO3D for hydrostatic runs.  (T. Otte)
!           19 Aug 2005  Moved VD_C from a pointer to MC2 to an individual
!                        array that is allocated in ALLOC_DEPV.  (T. Otte)
!-------------------------------------------------------------------------------

  USE coord
  USE vgrd
  USE mcipparm
  USE groutcom
  USE mcoutcom
  USE mdoutcom
  USE parms3

  IMPLICIT NONE

!-------------------------------------------------------------------------------
! Allocate grid arrays for COORD.
!-------------------------------------------------------------------------------

  ALLOCATE ( vglvs_gd  ( nlays+1 ) )
  ALLOCATE ( x3face_gd ( 0:nlays ) )

!-------------------------------------------------------------------------------
! Allocate grid arrays for VGRD.
!-------------------------------------------------------------------------------

  ALLOCATE ( x3face ( 0:nlays ) )
  ALLOCATE ( x3midl (   nlays ) )

!-------------------------------------------------------------------------------
! Allocate grid arrays for GROUTCOM.
!-------------------------------------------------------------------------------

  ALLOCATE ( gd2 ( ncols+1, nrows+1, gd2index ) )
    glat_d     => gd2(:,:,1)
    glon_d     => gd2(:,:,2)
    gmsfsq_d   => gd2(:,:,3)

  IF ( iflufrc ) THEN
    ALLOCATE ( gc2 ( ncols, nrows, gc2index+1 ) )
  ELSE
    ALLOCATE ( gc2 ( ncols, nrows, gc2index ) )
  ENDIF
    glat_c     => gc2(:,:,1)
    glon_c     => gc2(:,:,2)
    gmsfsq_c   => gc2(:,:,3)
    gtopo_c    => gc2(:,:,4)
    gdluse_c   => gc2(:,:,5)
    IF ( iflufrc ) THEN
    gpurb_c    => gc2(:,:,6)
    ENDIF

  IF ( iflufrc ) THEN
    ALLOCATE ( gb2 ( nbndyd, gb2index+1 ) )
  ELSE
    ALLOCATE ( gb2 ( nbndyd, gb2index ) )
  ENDIF
    glat_b     => gb2(:,1)
    glon_b     => gb2(:,2)
    gmsfsq_b   => gb2(:,3)
    gtopo_b    => gb2(:,4)
    gdluse_b   => gb2(:,5)
    IF ( iflufrc ) THEN
    gpurb_b    => gb2(:,6)
    ENDIF

  IF ( vgtyp_gd /= vgsgph3 ) THEN  ! NOT hydrostatic
    ALLOCATE ( gc3 ( ncols, nrows, nlays, gc3index ) )
      gx3htf_c   => gc3(:,:,:,1)
      gx3htm_c   => gc3(:,:,:,2)
  ENDIF

!-------------------------------------------------------------------------------
! Allocate grid arrays for MCOUTCOM, except for dry deposition species.
!-------------------------------------------------------------------------------

  ALLOCATE ( mc2 ( ncols, nrows, mc2index ) )
    prsfc_c    => mc2(:,:, 1)
    jacobs_c   => mc2(:,:, 2)
    ustar_c    => mc2(:,:, 3)
    wstar_c    => mc2(:,:, 4)
    pbl_c      => mc2(:,:, 5)
    zzero_c    => mc2(:,:, 6)
    moli_c     => mc2(:,:, 7)
    hfx_c      => mc2(:,:, 8)
    qfx_c      => mc2(:,:, 9)
    radyni_c   => mc2(:,:,10)
    rbndyi_c   => mc2(:,:,11)
    rstomi_c   => mc2(:,:,12)
    tempg_c    => mc2(:,:,13)
    temp10_c   => mc2(:,:,14)
    tem1p5_c   => mc2(:,:,15)
    wspd10_c   => mc2(:,:,16)
    wdir10_c   => mc2(:,:,17)
    glw_c      => mc2(:,:,18)
    gsw_c      => mc2(:,:,19)
    rgrnd_c    => mc2(:,:,20)
    rainn_c    => mc2(:,:,21)
    rainc_c    => mc2(:,:,22)
    cfract_c   => mc2(:,:,23)
    cldtop_c   => mc2(:,:,24)
    cldbot_c   => mc2(:,:,25)
    wbar_c     => mc2(:,:,26)
    snocov_c   => mc2(:,:,27)

  IF ( t2out ) THEN
    ALLOCATE ( temp2_c ( ncols, nrows ) )
  ENDIF

  IF ( px ) THEN
    ALLOCATE ( pc2 ( ncols, nrows, pc2index ) )
      soim1_c    => pc2(:,:, 1)
      soim2_c    => pc2(:,:, 2)
      soit1_c    => pc2(:,:, 3)
      soit2_c    => pc2(:,:, 4)
      sltyp_c    => pc2(:,:, 5)
      lai_c      => pc2(:,:, 6)
  ENDIF

  ALLOCATE ( mc3 ( ncols, nrows, nlays, mc3index ) )
    jacobf_c   => mc3(:,:,:, 1)
    jacobm_c   => mc3(:,:,:, 2)
    densa_j_c  => mc3(:,:,:, 3)
    what_jd_c  => mc3(:,:,:, 4)
    tempa_c    => mc3(:,:,:, 5)
    wvapor_c   => mc3(:,:,:, 6)
    press_c    => mc3(:,:,:, 7)
    densa_c    => mc3(:,:,:, 8)
    wwind_c    => mc3(:,:,:, 9)
    x3htm_c    => mc3(:,:,:,10)
    x3htf_c    => mc3(:,:,:,11)

  ALLOCATE ( mb3 ( nbndyd, nlays, mb3index ) )
    jacobf_b   => mb3(:,:, 1)
    jacobm_b   => mb3(:,:, 2)
    densa_j_b  => mb3(:,:, 3)
    what_jd_b  => mb3(:,:, 4)
    tempa_b    => mb3(:,:, 5)
    wvapor_b   => mb3(:,:, 6)
    press_b    => mb3(:,:, 7)
    densa_b    => mb3(:,:, 8)
    wwind_b    => mb3(:,:, 9)
    x3htm_b    => mb3(:,:,10)
    x3htf_b    => mb3(:,:,11)

  IF ( nqspecies > 0 ) THEN

    ALLOCATE ( qc3 ( ncols, nrows, nlays, nqspecies ) )
      IF ( nqspecies >= 2 ) THEN
        cldwtr_c   => qc3(:,:,:, 1)
        ranwtr_c   => qc3(:,:,:, 2)
      ENDIF
      IF ( nqspecies >= 4 ) THEN
        qice_c     => qc3(:,:,:, 3)
        qsnow_c    => qc3(:,:,:, 4)
      ENDIF
      IF ( nqspecies == 5 ) THEN
        qgraup_c   => qc3(:,:,:, 5)
      ENDIF

    ALLOCATE ( qb3 ( nbndyd, nlays, nqspecies ) )
      IF ( nqspecies >= 2 ) THEN
        cldwtr_b   => qb3(:,:, 1)
        ranwtr_b   => qb3(:,:, 2)
      ENDIF
      IF ( nqspecies >= 4 ) THEN
        qice_b     => qb3(:,:, 3)
        qsnow_b    => qb3(:,:, 4)
      ENDIF
      IF ( nqspecies == 5 ) THEN
        qgraup_b   => qb3(:,:, 5)
      ENDIF

  ENDIF

!-------------------------------------------------------------------------------
! Allocate grid arrays for MDOUTCOM.
!-------------------------------------------------------------------------------

  ALLOCATE ( md3 ( ncols+1, nrows+1, nlays, md3index ) )
    uu_d       => md3(:,:,:,1)
    vv_d       => md3(:,:,:,2)
    uhat_s     => md3(:,:,:,3)
    vhat_t     => md3(:,:,:,4)

END SUBROUTINE alloc_ctm
